package com.easy.silken;import com.easy.silken.parser.ConfigureParser;import com.easy.silken.parser.InterfaceParser;import com.easy.silken.parser.ServiceFieldsParser;import com.easy.silken.util.AnnotationElementUtil;import com.easy.silken.util.ElementUtil;import com.easy.silken.util.TypeUtil;import com.squareup.javapoet.ClassName;import javax.annotation.processing.Filer;import javax.annotation.processing.RoundEnvironment;import javax.lang.model.util.Elements;import javax.lang.model.util.Types;/** * Created by HandGunBreak on 2016/4/5 - 18:36. * Mail: handgunbreak@gmail.com * Copyright: 杭州医本健康科技有限公司(2015-2016) * Description: 注解解析类 */class RpcAnnotationParser {    private static RpcAnnotationParser mInstance;    private RpcAnnotationParser() {    }    /**     * 单例     *     * @return RpcParser实例     */    public static RpcAnnotationParser getInstance() {        if (mInstance == null) {            synchronized (RpcAnnotationParser.class) {                if (mInstance == null) {                    mInstance = new RpcAnnotationParser();                }            }        }        return mInstance;    }    /**     * 解析     *     * @param roundEnvironment env     * @param filer            filer     * @param types            types     * @param elements         elements     */    public void parser(RoundEnvironment roundEnvironment, Filer filer, Types types, Elements elements) {        TypeUtil.setTypes(types);        ElementUtil.setElements(elements);        AnnotationElementUtil.setRoundEnvironment(roundEnvironment);        //解析Configure注解类        ClassName cfgClassName = ConfigureParser.parserConfigureAnnotation(filer);        //@GGrpc注解类解析        InterfaceParser.interfaceParser(filer, cfgClassName);        //@GService注解解析        ServiceFieldsParser.parseRpcAnnotatedField(filer);    }}